/**
 * This file is generated by the Angular 2 template compiler.
 * Do not edit.
 */
 /* tslint:disable */

import * as import0 from '@angular/core/src/render/api';
import * as import1 from '@angular/core/src/linker/view';
import * as import2 from '@angular/core/src/linker/element';
import * as import3 from './toolbar-title';
import * as import4 from '@angular/core/src/linker/view_utils';
import * as import5 from '@angular/core/src/di/injector';
import * as import6 from '@angular/core/src/linker/view_type';
import * as import7 from '@angular/core/src/change_detection/change_detection';
import * as import8 from '@angular/core/src/linker/element_ref';
import * as import9 from './toolbar';
import * as import10 from '../navbar/navbar';
import * as import11 from '@angular/core/src/linker/component_factory';
import * as import12 from '@angular/core/src/metadata/view';
var renderType_ToolbarTitle_Host:import0.RenderComponentType = null;
class _View_ToolbarTitle_Host0 extends import1.AppView<any> {
  _el_0:any;
  private _appEl_0:import2.AppElement;
  _ToolbarTitle_0_4:import3.ToolbarTitle;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_ToolbarTitle_Host0,renderType_ToolbarTitle_Host,import6.ViewType.HOST,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckAlways);
  }
  createInternal(rootSelector:string):import2.AppElement {
    this._el_0 = this.selectOrCreateHostElement('ion-title',rootSelector,null);
    this._appEl_0 = new import2.AppElement(0,null,this,this._el_0);
    var compView_0:any = viewFactory_ToolbarTitle0(this.viewUtils,this.injector(0),this._appEl_0);
    this._ToolbarTitle_0_4 = new import3.ToolbarTitle(new import8.ElementRef(this._el_0),this.parentInjector.get(import9.Toolbar,null),this.parentInjector.get(import10.Navbar,null));
    this._appEl_0.initComponent(this._ToolbarTitle_0_4,[],compView_0);
    compView_0.create(this._ToolbarTitle_0_4,this.projectableNodes,null);
    this.init([].concat([this._el_0]),[this._el_0],[],[]);
    return this._appEl_0;
  }
  injectorGetInternal(token:any,requestNodeIndex:number,notFoundResult:any):any {
    if (((token === import3.ToolbarTitle) && (0 === requestNodeIndex))) { return this._ToolbarTitle_0_4; }
    return notFoundResult;
  }
}
function viewFactory_ToolbarTitle_Host0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<any> {
  if ((renderType_ToolbarTitle_Host === null)) { (renderType_ToolbarTitle_Host = viewUtils.createRenderComponentType('',0,null,[],{})); }
  return new _View_ToolbarTitle_Host0(viewUtils,parentInjector,declarationEl);
}
export const ToolbarTitleNgFactory:import11.ComponentFactory<import3.ToolbarTitle> = new import11.ComponentFactory<import3.ToolbarTitle>('ion-title',viewFactory_ToolbarTitle_Host0,import3.ToolbarTitle);
const styles_ToolbarTitle:any[] = [];
var renderType_ToolbarTitle:import0.RenderComponentType = null;
class _View_ToolbarTitle0 extends import1.AppView<import3.ToolbarTitle> {
  _el_0:any;
  constructor(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement) {
    super(_View_ToolbarTitle0,renderType_ToolbarTitle,import6.ViewType.COMPONENT,viewUtils,parentInjector,declarationEl,import7.ChangeDetectorStatus.CheckOnce);
  }
  createInternal(rootSelector:string):import2.AppElement {
    const parentRenderNode:any = this.renderer.createViewRoot(this.declarationAppElement.nativeElement);
    this._el_0 = this.renderer.createElement(parentRenderNode,'div',null);
    this.renderer.setElementAttribute(this._el_0,'class','toolbar-title');
    this.renderer.projectNodes(this._el_0,import4.flattenNestedViewRenderNodes(this.projectableNodes[0]));
    this.init([],[this._el_0],[],[]);
    return null;
  }
}
export function viewFactory_ToolbarTitle0(viewUtils:import4.ViewUtils,parentInjector:import5.Injector,declarationEl:import2.AppElement):import1.AppView<import3.ToolbarTitle> {
  if ((renderType_ToolbarTitle === null)) { (renderType_ToolbarTitle = viewUtils.createRenderComponentType('/Users/dan/Dev/ionic2-build/src/components/toolbar/toolbar-title.ts class ToolbarTitle - inline template',1,import12.ViewEncapsulation.None,styles_ToolbarTitle,{})); }
  return new _View_ToolbarTitle0(viewUtils,parentInjector,declarationEl);
}